# .github/workflows/azure-frontend-deploy.yml
name: Deploy Frontend to Azure

on:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: parkingmate
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.15.0

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install root dependencies
      run: |
        # Install root dependencies first
        pnpm install --no-frozen-lockfile -w
        # Then install workspace dependencies
        pnpm install --no-frozen-lockfile -r --filter "!@parkingmate/typescript-config"
        # Install typescript-config separately
        cd packages/typescript-config && pnpm install --no-frozen-lockfile && cd ../..

    - name: Generate API client types
      run: pnpm --filter @parkingmate/api-client api:generate

    - name: Build API client package
      run: pnpm --filter @parkingmate/api-client build

    - name: Build frontend only
      run: pnpm --filter @parkingmate/ui build
      env:
        VITE_API_BASE_URL: https://parkingmate-api-staging.azurewebsites.net/api/v1
        NODE_ENV: production

    - name: Verify build output
      run: |
        echo "Checking build output..."
        if [ ! -d "apps/web/dist" ]; then
          echo "ERROR: apps/web/dist not found!"
          exit 1
        fi
        echo "Build output verified:"
        ls -la apps/web/dist/

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_API_STAGING }}
        package: apps/web/dist