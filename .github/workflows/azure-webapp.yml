name: Backend Production Deploy 

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-workspace.yaml'
      - 'pnpm-lock.yaml'
      - 'web.config'
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: parkingmate-api
  NODE_VERSION: '20.x'
  COMMIT_HASH: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.15.0

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Generate API types
      run: pnpm --filter @parkingmate/api api:generate

    - name: Build backend API
      run: pnpm --filter @parkingmate/api build

    

    - name: Prepare standalone deployment
      shell: powershell
      run: |
        # Create a standalone deployment directory without workspace dependencies
        New-Item -ItemType Directory -Force -Path deploy | Out-Null
        
        # Copy built files
        Copy-Item -Path apps\api\dist -Destination deploy\ -Recurse -Force
        
        # Copy openapi.yml file to both locations (root and dist/src for compatibility)
        Copy-Item -Path apps\api\openapi.yml -Destination deploy\ -Force
        New-Item -ItemType Directory -Force -Path deploy\dist\src | Out-Null
        Copy-Item -Path apps\api\openapi.yml -Destination deploy\dist\src\ -Force
        
        # Copy and modify package.json to remove workspace dependencies
        Set-Location apps\api
        node -e "const pkg = require('./package.json'); delete pkg.devDependencies; if (pkg.dependencies) { Object.keys(pkg.dependencies).forEach(key => { if (typeof pkg.dependencies[key] === 'string' && pkg.dependencies[key].startsWith('workspace:')) { delete pkg.dependencies[key]; } }); } const fs = require('fs'); fs.writeFileSync('../../deploy/package.json', JSON.stringify(pkg, null, 2));"
        Set-Location ..\..
        
        # Copy web.config
        Copy-Item -Path web.config -Destination deploy\ -Force
        
        # Install production dependencies for Windows with native builds
        Set-Location deploy
        # Use npm for production to ensure Windows-compatible native modules
        npm install --production --no-optional
        Set-Location ..
        
        Write-Host "Deployment directory prepared"
        Get-ChildItem -Path deploy\ | Format-Table Name, Length, LastWriteTime
        
        # Verify bcrypt module is present
        if (Test-Path "deploy\node_modules\bcrypt") {
          Write-Host "[OK] bcrypt module installed" -ForegroundColor Green
        } else {
          Write-Host "[WARNING] bcrypt module not found" -ForegroundColor Yellow
        }
        
    - name: Create deployment package
      shell: powershell
      run: |
        # Package the standalone deployment directory
        Compress-Archive -Path deploy\* -DestinationPath web-app.zip -Force
        
        Write-Host "Deployment package created:"
        Get-Item web-app.zip | Select-Object Name, @{Name="Size(MB)";Expression={[math]::Round($_.Length/1MB, 2)}}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_API_STAGING }}
        package: web-app.zip